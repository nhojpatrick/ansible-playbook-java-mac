---
- hosts: localhost
  vars:
    jdk_major: "15"
    jdk_build: "18"
    jdk_file: "openjdk-{{ jdk_major }}-ea+{{ jdk_build }}_osx-x64_bin.tar.gz"
    jdk_url: "https://download.java.net/java/early_access/jdk{{ jdk_major }}/{{ jdk_build }}/GPL/{{ jdk_file }}"
    jdk_archive_subdir: "jdk-{{ jdk_major }}.jdk"
    jvm_home: "/Library/Java/JavaVirtualMachines"
    java_dir_name: "jdk-{{ jdk_major }}_ea_{{ jdk_build }}.jdk"
    java_owner: root
    java_group: wheel

  tasks:

    - name: Temporary jdk directory
      tempfile:
        state: directory
        suffix: jdk
      register: jdk_tmp

    - name: "Install jdk"
      block:

        - name: Download jdk
          get_url:
            url: "{{ jdk_url }}"
            dest: "{{ jdk_tmp.path }}/{{ jdk_file }}"

        - name: Unarchive jdk
          unarchive:
            src: "{{ jdk_tmp.path }}/{{ jdk_file }}"
            dest: "{{ jdk_tmp.path }}/"

        - name: Relocate jdk
          become: True
          copy:
            src: "{{ jdk_tmp.path }}/{{ jdk_archive_subdir }}/"
            dest:  "{{ jvm_home }}/{{ java_dir_name }}"
            remote_src: yes
            owner: "{{ java_owner }}"
            group: "{{ java_group }}"

        - name: Secure jdk
          become: True
          file:
            path: "{{ jvm_home }}/{{ java_dir_name }}"
            state: directory
            recurse: yes
            owner: "{{ java_owner }}"
            group: "{{ java_group }}"

      always:

        - name: Clean up temporary jdk directory
          file:
            path: "{{ jdk_tmp.path }}"
            state: absent
          when: jdk_tmp.path is defined
