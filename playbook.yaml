---
- hosts: localhost
  vars:
    jdk_major: "11"
    jdk_minor: "0"
    jdk_build: "2"

  tasks:

    - name: Include Vars
      include_vars:
        file: vars.yaml

    - name: Include JDK {{ jdk_major }}.x Overrides
      include_tasks: "vars/jdk-{{ jdk_major }}.x.yaml"

    - name: Checking if jdk already installed
      stat:
        path: "{{ jvm_home }}/{{ java_dir_name }}"
      register: java_home

    - name: Fail if jdk already installed
      fail:
        msg: "Already installed {{ jvm_home }}/{{ java_dir_name }}"
      when: java_home.stat.exists

    - name: Temporary jdk directory
      tempfile:
        state: directory
        suffix: jdk
      register: jdk_tmp

    - name: "Install jdk"
      block:

        - name: Download jdk
          get_url:
            url: "{{ jdk_url }}"
            dest: "{{ jdk_tmp.path }}/{{ jdk_dwnld_filename }}"

        - name: Unarchive jdk
          unarchive:
            src: "{{ jdk_tmp.path }}/{{ jdk_dwnld_filename }}"
            dest: "{{ jdk_tmp.path }}/"

        - name: Relocate jdk
          become: True
          copy:
            src: "{{ jdk_tmp.path }}/{{ jdk_archive_subdir }}/"
            dest:  "{{ jvm_home }}/{{ java_dir_name }}"
            remote_src: yes
            owner: "{{ java_owner }}"
            group: "{{ java_group }}"

        - name: Secure jdk
          become: True
          file:
            path: "{{ jvm_home }}/{{ java_dir_name }}"
            state: directory
            recurse: yes
            owner: "{{ java_owner }}"
            group: "{{ java_group }}"

      always:

        - name: Clean up temporary jdk directory
          file:
            path: "{{ jdk_tmp.path }}"
            state: absent
          when: jdk_tmp.path is defined
